introduction to the game engine 
what is a game engine designing our game engine
project setup 
entry point game engine series
logging 
premake 
planning the event system
event system
precompiled headers
window abstraction and glfw
window events
layers
modern opengl (glad)
imgui 
imgui events
githug and hazel
pull requests 
input polling
key and mouse codes
Math
imgui docking and viewports
introduction to rendering
rendering architecture
redering and maintenance
static libraries and zero warnings
rendering context
our first trinangle!
opengl shaders
rederer api abstraction
vertex buffer layouts 
vertex arrays
rederer flow and submission
cameras and how they work 
creating an orthographic camera
moving to sandbox
timetsteps and delta timetsteps
transforms
material systems 
shader abstraction
Refs scopes and smart pointers
textures 
blending 
shader Asset files
shader library
how to build a 2d renderer
camera controllers
resizing 
maintenance
preparing for 2d rendering 
starting our 2d renderer
2d renderer transfoms
2d renderer textures
single shader 2d renderer
intro to profiling
visual profiling 
insturmentation
improving our 2d rendering api
how i made a game in an hour using hazel 
hazel 2020 
batch rendering textures(+ Debugging!)
Drawing rotated quads
renderer stats and batch
testing hazel's preformance
lets's make some thing in hazel!
how sprite sheets/ texture atlases 
sub textures creating a sprite sheet api
creating a map of tiles
next steps dockspace 
framebuffers
making a new c++ project in hazel 
scene viewport 
code review + imgui layer events
where to go next + code review
entity component system
intro to entt(ecs)
entities and componets